% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetFeatureExtractionTable1Specifications.R
\name{getTable1SpecificationsFromCovariateData}
\alias{getTable1SpecificationsFromCovariateData}
\title{Generate Table 1 Specifications from Covariate Data}
\usage{
getTable1SpecificationsFromCovariateData(
  covariateData = NULL,
  covariateRef = NULL,
  analysisRef = NULL
)
}
\arguments{
\item{covariateData}{An optional object (typically a list) that contains \code{covariateRef} and \code{analysisRef}.
If provided, these elements will be collected and used in place of the separately supplied \code{covariateRef} and
\code{analysisRef} parameters.}

\item{covariateRef}{A data frame or tibble containing covariate reference data. This parameter is overridden if
\code{covariateData} is provided.}

\item{analysisRef}{A data frame or tibble containing analysis reference data. This parameter is overridden if
\code{covariateData} is provided.}
}
\value{
A tibble with one row per analysis containing Table 1 specification details. The tibble includes:
  \item{label}{A formatted label for the analysis (converted from camelCase to Title Case).}
  \item{analysisId}{The analysis ID.}
  \item{covariateIds}{A comma-separated string of unique covariate IDs associated with the analysis.}
}
\description{
This function generates specification rows for Table 1 based on covariate data and reference tables.
It extracts distinct analyses from the analysis reference and, for each analysis, collects the associated
covariate IDs from the covariate reference. A specification row is then created for each analysis using
\code{getTable1SpecificationsRow}. If \code{covariateData} is provided, it is used to extract both the
covariate reference (\code{covariateRef}) and the analysis reference (\code{analysisRef}).
}
\details{
The function follows these steps:

\enumerate{
  \item If \code{covariateData} is provided, extract and collect \code{covariateRef} and \code{analysisRef}
        from it.
  \item Select distinct \code{analysisId} and \code{analysisName} from the analysis reference.
  \item For each analysis, filter the covariate reference to retrieve unique covariate IDs corresponding to that analysis.
  \item Create a Table 1 specification row using \code{getTable1SpecificationsRow} with the collected covariate IDs.
  \item Bind all specification rows into a single tibble.
}
}
\examples{
\dontrun{
# Assuming myCovariateData is a list containing covariateRef and analysisRef:
table1Specs <- getTable1SpecificationsFromCovariateData(covariateData = myCovariateData)
print(table1Specs)

# Alternatively, if covariateRef and analysisRef are provided separately:
table1Specs <- getTable1SpecificationsFromCovariateData(
  covariateRef = myCovariateRef,
  analysisRef = myAnalysisRef
)
print(table1Specs)
}

}
