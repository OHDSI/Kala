% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ExecuteFeatureExtraction.R
\name{executeFeatureExtraction}
\alias{executeFeatureExtraction}
\title{Execute feature extraction using temporal covariate settings.}
\usage{
executeFeatureExtraction(
  connectionDetails = NULL,
  connection = NULL,
  cdmDatabaseSchema,
  vocabularyDatabaseSchema = cdmDatabaseSchema,
  cohortDatabaseSchema,
  cohortIds,
  cohortTable,
  covariateSettings = NULL,
  addCohortBasedTemporalCovariateSettings = TRUE,
  covariateCohortDatabaseSchema = cohortDatabaseSchema,
  includeCovariateIds = NULL,
  covariateCohortTable = cohortTable,
  covariateCohortDefinitionSet = NULL,
  cohortCovariateAnalysisId = 150,
  tempEmulationSchema = getOption("sqlRenderTempEmulationSchema"),
  outputFolder,
  aggregated = TRUE,
  rowIdField = "subject_id",
  incremental = TRUE
)
}
\arguments{
\item{connectionDetails}{An object of type \code{connectionDetails} as created using
\code{\link[DatabaseConnector]{createConnectionDetails}}. Can be left NULL if \code{connection} is provided. Both cannot be NULL.}

\item{connection}{An object of type \code{connection} as created using
\code{\link[DatabaseConnector]{connect}}. Can be left NULL if \code{connectionDetails} is provided. Both cannot be NULL.}

\item{cdmDatabaseSchema}{Schema name where your patient-level data in OMOP CDM format resides.
For SQL Server, include both database and schema name (e.g., 'cdm_data.dbo').}

\item{vocabularyDatabaseSchema}{Schema name where your OMOP vocabulary tables reside.
For SQL Server, include both database and schema name (e.g., 'vocabulary.dbo').}

\item{cohortDatabaseSchema}{Schema name where your cohort tables reside. For SQL Server,
include both database and schema name (e.g., 'scratch.dbo').}

\item{cohortIds}{Vector of cohort IDs for which covariate extraction is to be performed.}

\item{cohortTable}{Name of the table containing cohort data.}

\item{covariateSettings}{A FeatureExtraction covariateSettings object. If NULL, cohort-based temporal
covariate settings will be used.}

\item{addCohortBasedTemporalCovariateSettings}{Logical flag indicating whether to add cohort-based
temporal covariate settings. Default is TRUE.}

\item{covariateCohortDatabaseSchema}{Schema name where covariate cohort data resides. Default is the same as \code{cohortDatabaseSchema}.}

\item{includeCovariateIds}{Optional vector of covariate IDs to include.}

\item{covariateCohortTable}{Name of the table containing covariate cohort data. Default is the same as \code{cohortTable}.}

\item{covariateCohortDefinitionSet}{A data frame defining covariate cohort definitions used to generate covariate IDs.}

\item{cohortCovariateAnalysisId}{An integer identifier used to generate covariate IDs. Default is 150.}

\item{tempEmulationSchema}{Some database platforms (e.g., Oracle, Impala) do not support temporary tables.
Provide a schema with write privileges where temporary tables can be created.
Default is obtained from \code{getOption("sqlRenderTempEmulationSchema")}.}

\item{outputFolder}{Name of the local folder to place results. Use forward slashes (/); avoid network drives.}

\item{aggregated}{Logical flag indicating whether to aggregate covariate data. Default is TRUE.}

\item{rowIdField}{Field name used as the row identifier (e.g., "subject_id" or "row_id"). Default is "subject_id".}

\item{incremental}{Logical flag indicating whether to skip processing if output for a cohort already exists. Default is TRUE.}
}
\value{
No explicit return value. The function saves the covariate data files to the specified output folder.
}
\description{
This function executes the feature extraction on one or more cohortId in a cohort table and returns covariate data.
}
\details{
The function performs the following tasks:
\enumerate{
  \item Establishes a connection to the database using connection details if no connection is provided.
  \item Validates and creates the output folder if it does not exist.
  \item Checks that only one cohort is provided if aggregated data is disabled.
  \item Configures cohort-based temporal covariate settings when requested.
  \item Optionally creates a temporary table (when using a row identifier other than "subject_id")
        to store cohort data with row numbers.
  \item Iterates over each cohort ID and extracts covariate data via \code{FeatureExtraction::getDbCovariateData}.
  \item Saves the extracted covariate data to a zip file in the output folder.
  \item Cleans up any temporary tables that were created.
}
}
\examples{
\dontrun{
executeFeatureExtraction(
  connectionDetails = myConnectionDetails,
  cdmDatabaseSchema = "cdm_data.dbo",
  cohortDatabaseSchema = "scratch.dbo",
  cohortIds = c(1, 2, 3),
  cohortTable = "cohort_table",
  outputFolder = "results/output",
  covariateSettings = myCovariateSettings
)
}

}
