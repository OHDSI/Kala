% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/GetFeatureExtractionDefaultTemporalCovariateSettings.R
\name{getFeatureExtractionDefaultTemporalCovariateSettings}
\alias{getFeatureExtractionDefaultTemporalCovariateSettings}
\title{Get Feature Extraction Default Temporal Covariate Settings}
\usage{
getFeatureExtractionDefaultTemporalCovariateSettings(
  timeWindows = getFeatureExtractionDefaultTimeWindows(),
  useConditionOccurrence = TRUE,
  useProcedureOccurrence = TRUE,
  useDrugEraStart = TRUE,
  useMeasurement = TRUE,
  useConditionEraStart = TRUE,
  useConditionEraOverlap = TRUE,
  useVisitCount = TRUE,
  useVisitConceptCount = TRUE,
  useConditionEraGroupStart = TRUE,
  useConditionEraGroupOverlap = TRUE,
  useDrugExposure = FALSE,
  useDrugEraOverlap = TRUE,
  useDrugEraGroupStart = TRUE,
  useDrugEraGroupOverlap = TRUE,
  useObservation = TRUE,
  useDeviceExposure = TRUE
)
}
\arguments{
\item{timeWindows}{A list or tibble containing the temporal window definitions, with elements \code{startDay} and \code{endDay}.
Defaults to the output of \code{getFeatureExtractionDefaultTimeWindows()}.}

\item{useConditionOccurrence}{Logical indicating whether to include condition occurrence covariates. Defaults to \code{TRUE}.}

\item{useProcedureOccurrence}{Logical indicating whether to include procedure occurrence covariates. Defaults to \code{TRUE}.}

\item{useDrugEraStart}{Logical indicating whether to include drug era start covariates. Defaults to \code{TRUE}.}

\item{useMeasurement}{Logical indicating whether to include measurement covariates. Defaults to \code{TRUE}.}

\item{useConditionEraStart}{Logical indicating whether to include condition era start covariates. Defaults to \code{TRUE}.}

\item{useConditionEraOverlap}{Logical indicating whether to include condition era overlap covariates. Defaults to \code{TRUE}.}

\item{useVisitCount}{Logical indicating whether to include visit count covariates. Defaults to \code{TRUE}.}

\item{useVisitConceptCount}{Logical indicating whether to include visit concept count covariates. Defaults to \code{TRUE}.}

\item{useConditionEraGroupStart}{Logical indicating whether to include condition era group start covariates. Defaults to \code{TRUE}.}

\item{useConditionEraGroupOverlap}{Logical indicating whether to include condition era group overlap covariates. Defaults to \code{TRUE}.}

\item{useDrugExposure}{Logical indicating whether to include drug exposure covariates. Defaults to \code{FALSE} due to potential overabundance of concept IDs.}

\item{useDrugEraOverlap}{Logical indicating whether to include drug era overlap covariates. Defaults to \code{TRUE}.}

\item{useDrugEraGroupStart}{Logical indicating whether to include drug era group start covariates. Defaults to \code{TRUE}.}

\item{useDrugEraGroupOverlap}{Logical indicating whether to include drug era group overlap covariates. Defaults to \code{TRUE}.}

\item{useObservation}{Logical indicating whether to include observation covariates. Defaults to \code{TRUE}.}

\item{useDeviceExposure}{Logical indicating whether to include device exposure covariates. Defaults to \code{TRUE}.}
}
\value{
An object containing the temporal covariate settings, as created by \code{FeatureExtraction::createTemporalCovariateSettings}.
}
\description{
This function creates a set of default temporal covariate settings for feature extraction by configuring
various covariate flags and specifying temporal windows. It uses the provided time windows (or the default
from \code{getFeatureExtractionDefaultTimeWindows()}) to construct a tibble of distinct temporal intervals,
which is then passed along with the specified covariate settings to \code{FeatureExtraction::createTemporalCovariateSettings}.
}
\details{
This function first constructs a tibble, \code{feTemporalDays}, by extracting the \code{startDay} and \code{endDay}
from the provided \code{timeWindows} and ensuring that the intervals are distinct and ordered. These temporal windows
are then used to set the \code{temporalStartDays} and \code{temporalEndDays} parameters when calling
\code{FeatureExtraction::createTemporalCovariateSettings} along with other covariate flags.
}
\examples{
\dontrun{
# Retrieve default temporal covariate settings for feature extraction
temporalSettings <- getFeatureExtractionDefaultTemporalCovariateSettings()
print(temporalSettings)
}

}
